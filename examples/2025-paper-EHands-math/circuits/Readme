In the directory, there are  circuits computing various polynomials as depicted in Figure 3 of the EHands-math paper. Each file contains two circuits: one representing the ideal circuit and the other transpiled for the IBM QPU. The read_qpy_circ.py script demonstrates how to read and display these circuits.

All circuits involve a parametric input theta, which should be substituted with arccos(x). Here, x is within the range [-1, 1] and represents the input value used to compute the polynomials.

The value of the polynomial is determined by the expectation value of the single measured qubit, calculated as 1 - 2p, where p denotes the probability of measuring the qubit in the state 1.


The circuits compute the polynomials defined by coeffV[]. The ground truth can be calculated as shown below:

from numpy.polynomial import Polynomial
polyFunc = Polynomial(coeffV) 
xV=np.linspace(-1., 1.,50)       
yV= polyFunc(xV) 


The circuits evaluate the specified polynomials using the coefficients provided.


* atan_poly_3 : [ 0.0  1.0 0.0 -5.632e-01]
* atan_poly_5 : [ 0.0  7.596e-01  0.0 -1.0 0.0  5.444e-01]
* exp_poly_5  : [ 0.50 1.    0.972 0.654 0.404 0.157]
* gauss_poly_6: [ 1.051e-01  0.0 -5.901e-01 0.0  1.0  0.0 -5.181e-01]
* power2_poly_2: [ 0.0  0.    1.  ]
* power3_poly_3: [0.12  0.385 1.    0.769]
